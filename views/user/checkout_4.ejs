<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Final Review</title>
    <link rel="icon" href="/images/logo.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.all.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Source Sans 3', sans-serif;
            background-color: #aeacac;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        a {
            text-decoration: none;
            color: inherit;
        }
        /* Navbar */
        .nav-container{
            display: flex;
            justify-content: center;
            align-items: flex-start;
        }
        .navbar {
            width: 100%;
            padding: 15px 0;
            box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.5);
        }

        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: #8CBF3A;
        }

        .navbar-nav .nav-link {
            font-weight: 500;
            color: #555;
            font-size: 1rem;
            margin: 0 10px;
        }

        .navbar-nav .nav-link:hover {
            color: #8CBF3A;
        }

        .checkout-steps div{
            margin: 0px 3px;
        }

        .step {
            flex: 1;
            text-align: center;
            padding: 10px;
            border-radius: 5px;
            background: #eee;
            color: #333;
        }

        .step.completed {
            background: #60862e;
            color: white;
        }

        .step.active {
            background: #77cb08;
            color: white;
        }

        .step.incomplete {
            color: white;
            background-color: #676966;
        }

        .checkout-steps {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .checkout-steps div{
            margin: 0px 3px;
        }

        .cart-container {
            width: 90%;
            margin: 100px auto;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 2rem 2rem;
        }
        table {
            background-color: white;
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            text-align: left;
            padding: 1rem;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f5f5f5;
        }
        .quantity-input{
            font-size: 0.95rem;
            height: 30px;
            width: 40px;
            text-align: center;
        }
        .crl-button{
            background-color: #6A9F2E;
            border-radius: 5px;
            color: white;
            font-size: 1rem;
            font-weight: 800;
            height: 30px;
            width: 30px;
            margin: 0px 5px;
            border: none;
            transition: transform 0.3s, background-color 0.3s;
        }
        .crl-button:hover{
          background-color: #2e4a0e;
          transform: scale(1.1);
          border-radius: 5px;
          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }
        .decrease-btn{
            background-color: #dc1a1a;
        }
        .decrease-btn:hover{
          background-color: #7a1616;
        }
        /* Remove spin buttons in most browsers */
        .quantity-input::-webkit-outer-spin-button,
        .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
        }
        .remove-product{
          background-color: white;
          border: none;
          color: red;
          font-size: 0.9rem;
          font-weight: 800;
          cursor: pointer;
        }
        .remove-product:hover{
            transform: scale(1.1);
            border-radius: 5px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }
        .cart-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }
        .cart-totals {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin-top: 2rem;
            align-items: flex-start;
        }
        .cart-totals .totals-box {
            width: 100%;
            background: #f5f5f5;
            padding: 1.5rem;
            border-radius: 6px;
            margin-bottom: 1rem;
        }
        
        .apply-coupon input {
            width: calc(100% - 120px);
            padding: 0.5rem;
            margin-right: 1rem;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .apply-coupon button {
            margin: 10px 0px;
            padding: 0.5rem 1rem;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .checkout-btn {
            display: block;
            width: 100%;
            text-align: center;
            padding: 1rem;
            background-color: #007bff;
            color: white;
            text-transform: uppercase;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1rem;
        }
        .totals-box {
            width: 100%;
            max-width: 400px;
            margin: auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 16px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .totals-box h3 {
            text-align: center;
            margin-bottom: 16px;
            font-size: 1.5rem;
            color: #333;
        }

        .totals-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 16px;
        }

        .totals-table td {
            padding: 8px 12px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 1rem;
        }

        .totals-table td:first-child {
            text-align: left;
            font-weight: 500;
            color: #555;
        }

        .totals-table td:last-child {
            text-align: right;
            font-weight: 700;
            color: #000;
        }

        .totals-table tr:last-child td {
            border-bottom: none;
        }

        .checkout-btn {
            width: 100%;
            padding: 10px 16px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            cursor: pointer;
            text-transform: uppercase;
        }

        .checkout-btn:hover {
            background-color: #218838;
        }
        /* Footer */
        footer {
            background-color: #8CBF3A; /* Updated background color */
            color: white; /* Ensures text remains readable */
        }

        footer a {
            color: white; /* Ensures links in the footer are readable */
            text-decoration: none;
            transition: color 0.3s ease;
        }

        footer a:hover {
            color: #f0f0f0; /* Slightly lighter color on hover */
        }

        footer .input-group button {
            background-color: #6A9F2E; /* Matches footer tone */
            color: white;
            border: none;
        }
        

        footer .input-group button:hover {
            background-color: #5A8A27; /* Darker hover effect */
        }
        @media (min-width: 768px) {
            .cart-totals .totals-box{
                width: 100%;
                margin-bottom: 0;
            }

            footer .row {
                width: 100%;
                text-align: center;
            }
        }
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }

        .toast {
            display: none;
            background-color: #ff6600;
            color: white;
            padding: 15px 30px;
            border-radius: 12px;
            font-size: 16px;
            text-align: center;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            opacity: 0;
            transform: translateX(100%);
            animation: slideInFromRight 0.8s ease-out forwards;
        }

        @keyframes slideInFromRight {
            0% {
                opacity: 0;
                transform: translateX(100%);
            }

            100% {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes slideOutToRight {
            0% {
                opacity: 1;
                transform: translateX(0);
            }

            100% {
                opacity: 0;
                transform: translateX(100%);
            }
        }
        /* Coupon Card */
        .cards {
        display: flex;
        justify-content: space-evenly;
        flex-direction: row;
        gap: 15px;
        }

        .cards .green {
        background-color: #22c55e;
        }

        .cards .card {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        text-align: center;
        height: 150px;
        width: 250px;
        border-radius: 10px;
        color: white;
        cursor: pointer;
        transition: 400ms;
        }

        .cards .card p.tip {
        font-size: 1em;
        font-weight: 700;
        }

        .cards .card p.second-text {
        font-size: .9em;
        }

        .cards .card:hover {
        transform: scale(1.1, 1.1);
        }

        .cards:hover > .card:not(:hover) {
        filter: blur(10px);
        transform: scale(0.9, 0.9);
        }
    </style>
</head>
<body>
  <!-- Header Section -->
  <header>
      <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img src="/images/logo.png" style="width: 30px;">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/shop">Shop</a></li>
                    <li class="nav-item"><a class="nav-link" href="/cart">Cart</a></li>
                    <li class="nav-item"><a class="nav-link" href="/wishlist">Wishlist</a></li>
                </ul>
                <!-- User Profile Section -->
                <div class="dropdown ms-3">
                    <a href="#" class="d-flex align-items-center text-decoration-none dropdown-toggle"
                        id="userProfileDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <% if(name){ %>
                            <img src="/images/profile.png"
                                style="width: 30px; height: 30px; border-radius: 50%;">
                            <span class="ms-2">
                                <%= name %>
                            </span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userProfileDropdown">
                        <li><a class="dropdown-item" href="/profile">My Profile</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li><a class="dropdown-item" href=""
                                onclick="document.getElementById('logoutForm').submit(); return false;">Logout</a>
                        </li>
                        <form id="logoutForm" action="/logout" method="post" style="display: none;"></form>
                    </ul>
                    <% } else {%>
                        <img src="/images/profile.png" style="width: 30px; height: 30px; border-radius: 50%;">
                        <span class="ms-2">
                            <%= name %>
                        </span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userProfileDropdown">
                            <li><a class="dropdown-item" href="/login">Log In</a></li>
                        </ul>
                    <% } %>
                </div>
                <!-- End of User Profile Section -->
            </div>
        </div>
    </nav>
  </header>
  <div class="toast-container"></div>
    <div class="cart-container">
        <nav class="checkout-steps" >
            <div class="step completed">Billing</div>
            <div class="step completed">Shipping</div>
            <div class="step completed">Payment</div>
            <div class="step active">Review</div>
        </nav>
        <table>
            <thead>
                <tr>
                    <th>Remove</th>
                    <th>Image</th>
                    <th>Product</th>
                    <th>Unit Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% cartItems.forEach(item => { %>
                  <% if(item?.productId?.isListed) { %>
                    <tr>
                      <td><button class="remove-product" onclick="removeItem('<%= item._id %>')">⛔</button></td>
                      <td><img src="<%= item?.productId?.productImage1 %>" alt="<%= item.productId?.productName %>" class="cart-image"></td>
                      <td><%= item?.productId?.productName %></td>
                      <% if(item?.productId?.productOfferPrice) { %>
                          <td><%= item.productId.productOfferPrice %></td>
                       <% } else { %>
                          <td><%= item.productId.productPrice %></td>
                       <% } %>
                      <td>
                        <div class="quantity">
                            <input type="number" id="quantity-input-<%= item._id %>" value="<%= item.productQuantity %>" min="1" data-limit="<%= item.productId.productStock  %>" data-max="<%= item.productId.productStock  %> || 100" class="quantity-input" disabled>
                        </div>
                      </td>
                      <% if(item.productId.productOfferPrice) { %>
                        <td><%= item.productId.productOfferPrice * item.productQuantity %></td>
                     <% } else { %>
                        <td><%= item.productId.productPrice * item.productQuantity %></td>
                     <% } %>
                    </tr>
                  <% } %>
                <% }) %>
            </tbody>
        </table>

        <div class="cart-totals">
            <div class="totals-box apply-coupon">
                <h3>Have a Coupon?</h3>
                <form id="apply-coupon">
                    <% if(deliveryFee.coupon){ %>
                        <input type="text" name="couponCode" id="couponCode" placeholder="Enter Your Coupon Code" value="<%= deliveryFee?.couponCode %>" disabled>
                        <button style="background-color: red; margin-right: 10px;" onclick="removeCoupon()">Remove Coupon</button>
                    <% } else { %>
                        <input type="text" name="couponCode" id="couponCode" placeholder="Enter Your Coupon Code" value="<%= deliveryFee?.couponCode %>" >
                        <p style="display: none;color: red;font-size: 0.8rem;">Code is required</p>
                        <button type="submit">Apply Coupon</button>
                    <% } %>
                </form>
            </div>
            <div class="totals-box">
                <h3>Cart Totals</h3>
                <table class="totals-table">
                    <tr>
                        <td>Sub Total:</td>
                        <td id="sub-total">₹0.00</td>
                    </tr>
                    <tr>
                        <td>Delivery:</td>
                        <td id="delivery" data-val="<%= deliveryFee.datas %>">₹0.00</td>
                    </tr>
                    <tr>
                        <td>GST (18%):</td>
                        <td id="gst">₹0.00</td>
                    </tr>
                    <% if(deliveryFee.coupon){ %>
                        <tr>
                            <td>Coupon (<%= deliveryFee.coupon %>%):</td>
                            <td id="coupon-value" data-val="<%= deliveryFee.coupon %>"></td>
                        </tr>
                    <% } %>
                    <tr>
                        <td><strong>Grand Total:</strong></td>
                        <td id="total"><strong>₹0.00</strong></td>
                    </tr>
                    <% if(paymentMethod=="Wallet"){ %>
                        <tr>
                            <td>Wallet Balance:</td>
                            <td>₹<%= walletAmount %></td>
                        </tr>
                    <% } %>
                </table>
                <% if(paymentMethod == "COD"){ %>
                    <button class="checkout-btn" onclick="placeOrder()">Place Order</button>
                <% } else { %>
                    <button class="checkout-btn" onclick="placeOrder()">Pay & Order</button>
                <% } %>
            </div>
        </div>
        <% if(availableCoupon.length != 0){ %>
            <center>
            <h3 style="margin-top: 20px;">Available Coupon</h3>
        </center>
            <div class="totals-coupon" style="margin-top: 20px;">
                    <div class="cards">
                        <% availableCoupon.forEach(item => { %>
                            <div class="card green">
                                <p class="tip"><%= item.code %></p>
                                <p>Discount: <%= item.percentage %>%</p>
                                <p class="second-text">Minimum - Purchase: ₹<%= item.minPurchase %></p>
                            </div>
                        <% }) %>
                    </div>
            </div>
        <% } %>
    </div>
    <!-- Footer Section -->
    <footer class="py-5">
      <div class="container">
          <div class="row">
              <div class="col-md-3">
                  <h5>Contact Us</h5>
                  <p>No 11, bharathiyar street</p>
                  <p>Near Gandhi Street,</p>
                  <p>Karaikudi Tamilnadu.</p>
                  <p>Phone: +91 8148413021</p>
                  <p>Email: <a href="https://mail.google.com/mail/?view=cm&fs=1&to=imbedsoftwareteam@gmail.com">imbedsoftwareteam@gmail.com</a></p>
              </div>
              <div class="col-md-3">
                  <h5>Information</h5>
                  <ul class="list-unstyled">
                      <li><a href="#">Your Account</a></li>
                      <li><a href="#">Free Shipping Policy</a></li>
                      <li><a href="#">Return Policy</a></li>
                  </ul>
              </div>
              <div class="col-md-3">
                  <h5>Support</h5>
                  <ul class="list-unstyled">
                      <li><a href="#">Payment Method</a></li>
                      <li><a href="#">Product Support</a></li>
                  </ul>
              </div> 
              <div class="col-md-3">
                  <h5>Join Our Mailing List</h5>
                  <form>
                      <div class="input-group">
                          <input type="email" class="form-control" placeholder="Your Email Address">
                          <button class="btn btn-dark">→</button>
                      </div>
                  </form>
                  <h5 class="mt-3">Download Our Mobile Apps</h5>
                  <a href=""><img src="/images/playstore.webp" alt="App Stores" style="max-width: 100px;"></a>
                  <a href=""><img src="/images/appstore.png" alt="App Stores" style="max-width: 110px;margin-left: 20px;"></a>
              </div>
          </div>
      </div>
  </footer>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
        const cartTable = document.querySelector("table tbody");
        const subTotalElement = document.getElementById("sub-total");
        const deliveryElement = document.getElementById("delivery");
        const gstElement = document.getElementById("gst");
        const couponElement = document.getElementById("coupon-value");
        const totalElement = document.getElementById("total");
        

        // Function to calculate and update totals
        function calculateTotals() {
            let subTotal = 0;
            
            // Loop through each row in the cart table
            cartTable.querySelectorAll("tr").forEach(row => {
                const totalCell = row.querySelector("td:nth-child(6)");
                if (totalCell) {
                    subTotal += parseFloat(totalCell.innerText) || 0; // Safely handle NaN
                }
            });

            const value = Number(deliveryElement.dataset.val)
            const gst = subTotal * 0.18; // Calculate GST (18%)
            let tem = 0
            if (couponElement){
                const coupon = Number(couponElement.dataset.val)
                tem = -((subTotal + gst + value)*coupon/100)
            }
            const total = subTotal + gst + value + tem ; // Calculate final total

            // Update totals in the table
            deliveryElement.innerText = `₹${value}`;
            subTotalElement.innerText = `₹${subTotal.toFixed(2)}`;
            gstElement.innerText = `₹${gst.toFixed(2)}`;
            if (couponElement){
                couponElement.innerText = `₹${tem.toFixed(2)}`
            }
            totalElement.innerHTML = `<strong>₹${total.toFixed(2)}</strong>`;
        }

        // Function to update row total when quantity changes
        function updateRowTotal(row, quantity) {
            const unitPrice = parseFloat(row.querySelector("td:nth-child(4)").innerText) || 0;
            const totalCell = row.querySelector("td:nth-child(6)");
            totalCell.innerText = (unitPrice * quantity).toFixed(2);
        }

        // Ensure quantity input is valid
        function validateQuantity(input) {
            let value = parseInt(input.value, 10);
            const maxStock = parseInt(input.dataset.max, 10);

            if (isNaN(value) || value < 1) {
                value = 1; // Minimum value
            } else if (value > maxStock) {
                value = maxStock; // Set to max stock
                Swal.fire({
                    title: 'Limit Reached!',
                    text: `Only ${maxStock} stocks are available. Adjusting to maximum allowed.`,
                    icon: 'info',
                    timer: 2000, // Automatically closes after 2 seconds
                    showConfirmButton: false, // No confirmation button
                    timerProgressBar: true
                });
            }

            input.value = value; // Correct the input value
            return value; // Return validated value
        }

        // Handle quantity change (button click or manual input)
        cartTable.addEventListener("click", (event) => {
            const target = event.target;

            if (target.classList.contains("increase-btn") || target.classList.contains("decrease-btn")) {
                const quantityInput = target.closest(".quantity").querySelector(".quantity-input");
                let currentQuantity = parseInt(quantityInput.value, 10) || 1;
                const maxStock = parseInt(quantityInput.dataset.max, 10);

                if (target.classList.contains("increase-btn")) {
                    if (currentQuantity < maxStock && currentQuantity < 100) {
                        currentQuantity++;
                    } else {
                        Swal.fire({
                            title: 'Limit Reached!',
                            text: `Only ${maxStock} stocks left or You reached Maximum quantity 100`,
                            icon: 'info',
                            timer: 2000,
                            showConfirmButton: false,
                            timerProgressBar: true
                        });
                    }
                } else if (target.classList.contains("decrease-btn")) {
                    currentQuantity = Math.max(1, currentQuantity - 1); // Ensure minimum quantity is 1
                }

                quantityInput.value = currentQuantity; // Update input value
                updateRowTotal(target.closest("tr"), currentQuantity);
                calculateTotals();
            }
        });

        cartTable.addEventListener("input", (event) => {
            if (event.target.classList.contains("quantity-input")) {
                const quantityInput = event.target;
                const validatedQuantity = validateQuantity(quantityInput); // Validate and correct input
                updateRowTotal(quantityInput.closest("tr"), validatedQuantity); // Update row total
                calculateTotals(); // Recalculate totals
            }
        });

        // Initial calculation on page load
        calculateTotals();
    });


    </script>

    <script>
        async function removeItem(id) {
            const response = await fetch (`/removeitem?id=${id}`, { method: 'DELETE' })
            const result = await response.json()
            const toastContainer = document.querySelector(".toast-container");
            const toast = document.createElement("div");
            toast.className = "toast";
            if(result.success){
                toast.textContent = result.message;
                toast.style.backgroundColor = "#28a745"; // Green color for success
                toastContainer.appendChild(toast);

                setTimeout(() => {
                    toast.style.display = "block";
                }, 100);

                setTimeout(() => {
                    toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                }, 2000);

                setTimeout(() => {
                    localStorage.removeItem(id);
                    toast.style.display = "none";
                    toast.remove(); // Remove toast from DOM
                    window.location.reload()
                }, 2800);
            } else {
                toast.textContent = result.message;
                toast.style.backgroundColor = "#dc3545"; // Red color for error
                toastContainer.appendChild(toast);
                setTimeout(() => {
                    toast.style.display = "block";
                }, 100);

                setTimeout(() => {
                    toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                }, 3000);

                setTimeout(() => {
                    toast.style.display = "none";
                    toast.remove(); // Remove toast from DOM
                }, 3800);
            }
        }
    </script>
    <script>
        async function placeOrder() {
            try {
                const response1 = await fetch('/finalstockcheck', {method: 'PATCH'});
                const result1 = await response1.json();
                if (result1.success) {
                    const payMethod = {
                        paymentMethod: "<%= paymentMethod %>"
                    }
                    if(payMethod.paymentMethod == "Online Payment"){
                        const preOrder = await paymentCheck()
                        const ans = await payNow();
                    } else if(payMethod.paymentMethod == "COD"){
                        await orderItem();
                    } else if(payMethod.paymentMethod == "Wallet"){
                        await orderItem();
                    }
                } else {
                    if (typeof Swal !== "undefined") {
                        Swal.fire({
                            title: result1.title,
                            text: result1.message,
                            icon: 'info',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.reload()
                        });
                    } else {
                        alert(result1.message);
                    }
                }
            } catch (error) {
                console.error('Error placing order:', error);
                if (typeof Swal !== "undefined") {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An unexpected error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                } else {
                    alert('An unexpected error occurred. Please try again.');
                }
            }
        }
    </script>
    <script>
        async function orderItem() {
            const subTotal = parseFloat(document.getElementById("sub-total").innerText.slice(1));
            const delivery = parseFloat(document.getElementById("delivery").innerText.slice(1));
            const gst = parseFloat(document.getElementById("gst").innerText.slice(1));
            const tem = document.getElementById("coupon-value")
            const total = parseFloat(document.getElementById("total").innerText.slice(1));
            let orderPrice
            if(tem){
                let coupon = parseFloat(document.getElementById("coupon-value").innerText.slice(1));
                orderPrice = { subTotal, delivery, gst, coupon, total };
            } else {
                orderPrice = { subTotal, delivery, gst,  total };
            }
            const paymentMethod = "<%= paymentMethod %>"
            const walletAmount = "<%= walletAmount %>"
            if(total>1000 && paymentMethod == "COD"){
                Swal.fire({
                        title: 'OOPS!',
                        text: 'Cash on Delivery is not available for orders above ₹1000. Please choose a different payment method.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    })
                    return 
            }
            else if(total>walletAmount && paymentMethod == "Wallet"){
                Swal.fire({
                        title: 'OOPS!',
                        text: `Wallet Balance: ₹${walletAmount} Only`,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    })
                    return 
            }
            try{
                const response = await fetch('/orderproduct', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderPrice)
                });

                const result = await response.json();
                if (result.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Your order has been placed successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = "/confirm";
                    });
                } else {
                    alert("Something went wrong!");
                    window.location.href = "/";
                }
            } catch (error) {
                console.log(error)
            }
        }
    </script>
    <script>
        document.getElementById("apply-coupon").addEventListener("submit",async function(event) {
            event.preventDefault(); // Prevent form submission
            
            let inputField = this.querySelector('input[name="couponCode"]');
            let errorMessage = this.querySelector("p");

            if (inputField.value.trim() === "") {
                errorMessage.style.display = "block"; // Show error message
            } else {
                errorMessage.style.display = "none"; // Hide error message
                const codeData = document.getElementById('couponCode').value;
                console.log(codeData)
                const data = {
                    code:codeData,
                }
                const response = await fetch('/applycoupon', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                const result = await response.json();
                if (result.success) {
                    Swal.fire({
                        title: result.title,
                        text: result.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload()
                    });
                } else {
                    Swal.fire({
                        title: result.title,
                        text: result.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    </script>
    <script>
        async function removeCoupon() {
            const response = await fetch('/removecoupon', {method:"PATCH"})
            const result = await response.json();
            if (result.success) {
                Swal.fire({
                    title: result.title,
                    text: result.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.reload()
                });
            } else {
                Swal.fire({
                    title: result.title,
                    text: result.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    </script>
    <script>
        async function payNow(){
            let total = parseFloat(document.getElementById("total").innerText.slice(1));
            const amount = Math.round(total * 100);
            const response = await fetch('/onlinepayment', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ amount, currency: 'INR', receipt: 'receipt#1', notes: {} })
            });

            const { order, key } = await response.json();
            
            const options = {
                key: key,
                amount: order.amount,
                currency: order.currency,
                name: "IMBED SOFTWARE",
                description: 'Test Transaction',
                order_id: order.id,
                theme: {
                    color: "#28a745"
                },
                handler: function(response){
                    fetch('/verify-payment',{
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_signature: response.razorpay_signature
                        })
                    }).then(res => res.json())
                    .then(data => {
                        if (data.status === 'ok') {
                            orderItem();
                        } else {
                            alert('Payment verification failed');
                        }
                    }).catch(error => {
                        console.error('Error: ', error);
                        alert("Error verifying payment");
                    });
                }
            };
            const rzp = new Razorpay(options);
            rzp.open();
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
          const checkoutBtn = document.querySelector(".checkout-btn");
          
          // Parse cartItems from server-side data
          const cartItems = JSON.parse('<%- JSON.stringify(cartItems) %>');
      
          if (cartItems.length === 0) {
            checkoutBtn.disabled = true;
            checkoutBtn.style.opacity = "0.5"; // Optional: Make it visually disabled
            checkoutBtn.style.cursor = "not-allowed";
          }
        });
      </script>
      <script>
        async function paymentCheck(){
            const subTotal = parseFloat(document.getElementById("sub-total").innerText.slice(1));
            const delivery = parseFloat(document.getElementById("delivery").innerText.slice(1));
            const gst = parseFloat(document.getElementById("gst").innerText.slice(1));
            const tem = document.getElementById("coupon-value")
            const total = parseFloat(document.getElementById("total").innerText.slice(1));
            let orderPrice
            if(tem){
                let coupon = parseFloat(document.getElementById("coupon-value").innerText.slice(1));
                orderPrice = { subTotal, delivery, gst, coupon, total };
            } else {
                orderPrice = { subTotal, delivery, gst,  total };
            }
            try {
                const response = await fetch('/fail-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderPrice)
                });
                const result = await response.json();
                if(result.success){
                    return
                } else {
                    Swal.fire({
                        title: "Error",
                        text: "Somthing Went Wrong!",
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.log(error)
                Swal.fire({
                    title: "Error",
                    text: "Somthing Went Wrong!",
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
      </script>
</body>
</html>


