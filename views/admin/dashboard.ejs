<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard</title>
  <link rel="icon" href="/images/logo.png">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Afacad+Flux:wght@100..1000&display=swap" rel="stylesheet">
</head>
<style>
  * {
      font-family: "Afacad Flux", serif;
      font-weight: 700;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
  }
  /* From Uiverse.io by Rodrypaladin */ 
    .button {
        margin: 30px 25px;
        background-image: linear-gradient(to right bottom, #e300ff, #ff00aa, #ff5956, #ffb900, #fffe00);
        border: none;
        font-size: 1.2em;
        border-radius: 1.5em;
        padding: 4px;
        transition: border-top-left-radius 0.2s ease-in, 
        border-top-right-radius 0.2s ease-in 0.15s, 
        border-bottom-right-radius 0.2s ease-in 0.3s,
        border-bottom-left-radius 0.2s ease-in 0.45s, 
        padding 0.2s ease-in;
        position: relative;
    }

    .button__int {
        color: black;
        background-color: white;
        border-radius: 1.3em;
        padding: 10px 40px;
        transition: all 0.2s ease-in,
        border-top-left-radius 0.2s ease-in, 
        border-top-right-radius 0.2s ease-in 0.15s, 
        border-bottom-right-radius 0.2s ease-in 0.3s,
        border-bottom-left-radius 0.2s ease-in 0.45s,
        padding 0.2s ease-in;
        font-weight: 600;
        z-index: -1;
        box-shadow: -15px -10px 30px -5px rgba(0, 128, 0, 0.8),  /* Dark Green */
            15px -10px 30px -5px rgba(34, 139, 34, 0.8),  /* Forest Green */
            15px 10px 30px -5px rgba(50, 205, 50, 0.8),  /* Lime Green */
            -15px 10px 30px -5px rgba(144, 238, 144, 0.8); /* Light Green */
    }

    .button:active .button__int {
        padding: 10px 30px;
    }

    .button:hover {
        border-radius: 0;
    }

    .button:hover .button__int {
        border-radius: 0;
    }

    
    .button:hover .button__int {
        box-shadow: -25px -10px 30px -5px rgba(0, 128, 0, 0.7), 
            25px -10px 30px -5px rgba(34, 139, 34, 0.7), 
            25px 10px 30px -5px rgba(50, 205, 50, 0.7), 
            -25px 10px 30px -5px rgba(144, 238, 144, 0.7);
    }

    .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
    }

    .toast {
        display: none;
        background-color: #ff6600;
        color: white;
        padding: 15px 30px;
        border-radius: 12px;
        font-size: 16px;
        text-align: center;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        opacity: 0;
        transform: translateX(100%);
        animation: slideInFromRight 0.8s ease-out forwards;
    }

    @keyframes slideInFromRight {
        0% {
            opacity: 0;
            transform: translateX(100%);
        }

        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes slideOutToRight {
        0% {
            opacity: 1;
            transform: translateX(0);
        }

        100% {
            opacity: 0;
            transform: translateX(100%);
        }
    }
    .btn-outline-secondary{
        color: aliceblue;
        background-color: rgb(66, 67, 68);
    }
</style>

<body >
  <%- include('../adminPartials/header') %>
  <div class="toast-container"></div>
  <div class="container mt-4">
    <h3>Imbed Software</h3>

    <div class="row">
        <div class="col-md-3">
            <div class="card p-3 text-center">
                <h4><%= completedOrders %></h4>
                <p>Completed Orders</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 text-center">
                <h4><%= ordersToShip %></h4>
                <p>Orders to ship</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 text-center">
                <h4>₹<%= todayIncome %></h4>
                <p>Last 24hr Income</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card p-3 text-center">
                <h4><%= productCount.total %> in <%= productCount.categories %> categories</h4>
                <p>Products Count</p>
            </div>
        </div>
    </div>
    <div style="display: flex; justify-content: center;">
        <form id="date-wise-filter" class="d-flex gap-2 align-items-center flex-wrap">
            <div style="display: flex; justify-content: center; width: 99%;">
                <div style="width: 40%;">
                    <label for="from">From</label>
                    <input type="date" class="form-control" id="startDate" value="<%= start %>" name="from">
                </div>
                <div style="width: 40%; margin-left: 10px;">
                    <label for="to">To</label>
                    <input type="date" class="form-control" id="endDate" value="<%= end %>" name="to">
                </div>
                <div style="width: 40%; margin-left: 10px;">
                    <label for="to"></label>
                    <button class="btn btn-success" style="height: 40px;">Apply</button>
                </div>
            </div>
        </form>
        <form id="plan-view" class="d-flex gap-2 align-items-center flex-wrap">
            <div style="display: flex; justify-content: center; width: 100%;">
                    <label for="timePeriod" style="margin: 0px 5px">Time Period</label>
                    <select id="timePeriod" class="form-select" name="timePeriod" style="padding: 0px 10px 0px 5px; margin: 0px 10px 0px 0px; height: 40px; width: 50%;">
                        <option disabled value="" <%= timePeriod === null ? "selected" : "" %>>Select</option>
                        <option value="week" <%= timePeriod === "week" ? "selected" : "" %>>Week</option>
                        <option value="month" <%= timePeriod === "month" ? "selected" : "" %>>Month</option>
                        <option value="year" <%= timePeriod === "year" ? "selected" : "" %>>Year</option>
                    </select>
                    <button id="filterBtn" class="btn btn-success" disabled style="width: 35%; height: 40px;">Filter</button>
            </div>
        </form>
        <button class="btn btn-outline-secondary" style="width: 10%; height: 40px; margin: 10px 20px; height: 40px; " onclick="clearFilter()">Clear Filter</button>
    </div>
    <div class="row mt-4">
        <div class="col-md-6" style="max-width: 500px;">
            <div class="card p-3">
                <h5>Category Wise Revenue</h5>
                <canvas id="categoryChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-3">
                <h5>Last Two Week Sales</h5>
                <canvas id="salesChart"></canvas>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card p-3 text-center">
                <h4>Total Revenue</h4>
                <h3>₹<%= totalRevenue %></h3>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-3 text-center">
                <h4>Monthly Revenue</h4>
                <h3>₹<%= monthlyRevenue %></h3>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card p-3 text-center">
                <h4>Users</h4>
                <h3><%= activeUsers %> <span class="text-success">Active users</span></h3>
            </div>
        </div>
    </div>
  </div>
  <center>
    <a href="/admin/top-products">
        <button class="button">
            <div class="button__int">
            <span class="button__span">Top 10 Selling Products</span>
            </div>
        </button>
    </a>
    <a href="/admin/top-category">
        <button class="button">
            <div class="button__int">
            <span class="button__span">Top 10 Selling Category</span>
            </div>
        </button>
    </a>
  </center>
  <%- include('../adminPartials/footer') %>

  <input type="hidden" id="categoryRevenue" value='<%- JSON.stringify(categoryRevenue) %>' />
  <input type="hidden" id="salesData" value='<%- JSON.stringify(salesData) %>' />

  <script>
      // Pie Chart for Category Wise Revenue
      const categoryData = JSON.parse(document.getElementById('categoryRevenue').value);
      const categoryCtx = document.getElementById('categoryChart').getContext('2d');
      new Chart(categoryCtx, {
          type: 'doughnut',
          data: {
              labels: categoryData.map(c => c.name),
              datasets: [{
                  data: categoryData.map(c => c.value),
                  backgroundColor: categoryData.map(c => c.color),
              }]
          }
      });

      // Line Chart for Last Two Week Sales
      const salesData = JSON.parse(document.getElementById('salesData').value);
      const salesCtx = document.getElementById('salesChart').getContext('2d');
      new Chart(salesCtx, {
          type: 'line',
          data: {
              labels: salesData.map(s => s.date),
              datasets: [{
                  label: '',
                  data: salesData.map(s => s.revenue),
                  borderColor: '#8cbf3a',
                  fill: false,
                  tension: 0.1
              }]
          }
      });
  </script>
  <script>
        let startDate = document.getElementById("startDate");
        let endDate = document.getElementById("endDate");

        startDate.addEventListener("change", function () {
            let startDateValue = startDate.value;
            endDate.setAttribute("min", startDateValue);
        });

        endDate.addEventListener("change", function () {
            let endDateValue = endDate.value;
            startDate.setAttribute("max", endDateValue);
        });
        document.getElementById("timePeriod").addEventListener("change", function() {
            const filterBtn = document.getElementById("filterBtn");

            if (this.value === "") {
                filterBtn.disabled = true;
                filterBtn.style.cursor = "not-allowed";
            } else {
                filterBtn.disabled = false;
                filterBtn.style.cursor = "pointer";
            }
        });
        document.getElementById("plan-view").addEventListener("submit", async function(event) {
            event.preventDefault(); // Prevent page reload
        
            const timePeriod = document.getElementById("timePeriod").value;
            const filterBtn = document.getElementById("filterBtn");
        
            // Disable button while sending the request
            filterBtn.disabled = true;
            filterBtn.style.cursor = "not-allowed";
        
            try {
                const response = await fetch("/admin/dash/filter", {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ timePeriod }),
                });
        
                const result = await response.json();
                
                const toastContainer = document.querySelector(".toast-container");
                const toast = document.createElement("div");
                toast.className = "toast";

                if (result.success) {
                    window.location.reload()
                } else {
                    toast.textContent = "Somthing Wrong!";
                    toast.style.backgroundColor = "#dc3545"; // Red color for error
                    toastContainer.appendChild(toast);
                    setTimeout(() => {
                        toast.style.display = "block";
                    }, 100);

                    setTimeout(() => {
                        toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                    }, 3000);

                    setTimeout(() => {
                        toast.style.display = "none";
                        toast.remove(); // Remove toast from DOM
                    }, 3800);   
                }
            } catch (error) {
                console.error("Error:", error);
            }
        });
  </script>
  <script>
    // Get today's date in YYYY-MM-DD format
    const today = new Date().toISOString().split("T")[0];

    // Select input elements
    const startDates = document.getElementById("startDate");
    const endDates = document.getElementById("endDate");

    // Set max attribute to disable future dates
    startDates.setAttribute("max", today);
    endDates.setAttribute("max", today);
</script>
  <script>
    document.getElementById("date-wise-filter").addEventListener("submit", async function(event) {
        event.preventDefault(); // Prevent form from reloading the page
    
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;
    
        const requestData = { startDate, endDate };
    
        try {
            const response = await fetch("/admin/dash/filter-by-date", {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(requestData),
            });

            const result = await response.json();
            
            const toastContainer = document.querySelector(".toast-container");
            const toast = document.createElement("div");
            toast.className = "toast";

            if (result.success) {
                window.location.reload()
            } else {
                toast.textContent = "Somthing Wrong!";
                toast.style.backgroundColor = "#dc3545"; // Red color for error
                toastContainer.appendChild(toast);
                setTimeout(() => {
                    toast.style.display = "block";
                }, 100);

                setTimeout(() => {
                    toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                }, 3000);

                setTimeout(() => {
                    toast.style.display = "none";
                    toast.remove(); // Remove toast from DOM
                }, 3800);   
            }
        } catch (error) {
            console.error("Error:", error);
        }
    });

    // Clear Filter
    async function clearFilter() {
            try {
                const response = await fetch("/admin/dash/clearfilter", {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ timePeriod }),
                });

                const result = await response.json();
                const toastContainer = document.querySelector(".toast-container");
                const toast = document.createElement("div");
                toast.className = "toast";

                if (result.success) {
                    window.location.reload()
                } else {
                    toast.textContent = "Somthing Wrong!";
                    toast.style.backgroundColor = "#dc3545"; // Red color for error
                    toastContainer.appendChild(toast);
                    setTimeout(() => {
                        toast.style.display = "block";
                    }, 100);

                    setTimeout(() => {
                        toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                    }, 3000);

                    setTimeout(() => {
                        toast.style.display = "none";
                        toast.remove(); // Remove toast from DOM
                    }, 3800);   
                }

            } catch (error) {
                console.log(error)
            }
        }

</script>

</body>
</html>