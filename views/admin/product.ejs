<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Products</title>
        <link rel="icon" href="/images/logo.png">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Afacad+Flux:wght@100..1000&display=swap" rel="stylesheet">
        <style>
            * {
                font-family: "Afacad Flux", serif;
                font-weight: 700;
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            .toast-container {
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
            }
            .toast {
                display: none;
                background-color: #ff6600;
                color: white;
                padding: 15px 30px;
                border-radius: 12px;
                font-size: 16px;
                text-align: center;
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
                opacity: 0;
                transform: translateX(100%);
                animation: slideInFromRight 0.8s ease-out forwards;
            }

            @keyframes slideInFromRight {
                0% {
                    opacity: 0;
                    transform: translateX(100%);
                }
                100% {
                    opacity: 1;
                    transform: translateX(0);
                }
            }

            @keyframes slideOutToRight {
                0% {
                    opacity: 1;
                    transform: translateX(0);
                }
                100% {
                    opacity: 0;
                    transform: translateX(100%);
                }
            }
            
        </style>
    </head>
    <body>

        <%- include('../adminPartials/header') %>
        <div class="toast-container"></div>
        <main class="container my-4">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h1>Products</h1>
                <a href="/admin/addproduct"><button class="btn btn-success">Add New Product</button></a>
            </div>
            
            <div class="d-flex justify-content-end mb-2">
                <input type="text" class="form-control w-25" id="searchInput" placeholder="Search Products">
            </div>
            
            <table class="table table-bordered table-hover">
                <thead class="table-primary">
                    <tr>
                        <th>S.No</th>
                        <th>Product Name</th>
                        <th>Parent Category</th>
                        <th>Product Image1</th>
                        <th>Product Image2</th>
                        <th>Product Image3</th>
                        <th>Product Price</th>
                        <th>Offer Price</th>
                        <th>In Stock</th>
                        <th>List/Unlist</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach((product,ind) => { %>
                    <tr>
                        <td><%= ind+1 %></td>
                        <td><%= product.productName %></td>
                        <td><%= product?.productCategoryId?.categoryName %></td>
                        <td><img src="<%= product.productImage1 %>" alt="Image1" width="50"></td>
                        <td><img src="<%= product.productImage2 %>" alt="Image2" width="50"></td>
                        <td><img src="<%= product.productImage3 %>" alt="Image3" width="50"></td>
                        <td><%= product.productPrice %></td>
                        <td><%= product.productOfferPrice %></td>
                        <td><%= product.productStock %></td>
                        <td>
                            <% if (product.isListed) { %>
                                <button class="btn btn-danger list-toggle" data-id="<%= product._id %>" data-action="unlist">Unlist</button>
                            <% } else { %>
                                <button class="btn btn-success list-toggle" data-id="<%= product._id %>" data-action="list">List</button>
                            <% } %>
                        </td>
                        <td>
                            <a href="/product/edit/<%= product?._id %>"><button class="btn btn-primary">Edit</button></a>
                            <button class="btn btn-danger " onclick="deleteProduct('<%= product._id %>')">Delete</button>
                        </td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </main>
        <% if(totalPages>1){ %>
            <ul class="pagination mb-5">
                <% if (page > 1) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= page - 1 %>">Previous</a>
                </li>
                <% } %>
            
                <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === page ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
                <% } %>
            
                <% if (page < totalPages) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= page + 1 %>">Next</a>
                </li>
                <% } %>
            </ul>
        <% } %>
        <%- include('../adminPartials/footer') %>
        
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // List Or Unlist
        const toastContainer = document.querySelector(".toast-container");
        const toast = document.createElement("div");
        toast.className = "toast";
        document.querySelectorAll('.list-toggle').forEach(button => {
            button.addEventListener('click', async function () {
                const categoryId = this.dataset.id; // Get the category ID
                const action = this.dataset.action; // Get the action (list or unlist)

                try {
                    // Send a request to the server to toggle the list/unlist status
                    const response = await fetch(`/product/${action}/${categoryId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();

                       if (result.success) {
                        toast.textContent = result.message;
                        toast.style.backgroundColor = "#28a745"; // Green color for success
                        toastContainer.appendChild(toast);

                        setTimeout(() => {
                            toast.style.display = "block";
                        }, 100);
            
                        setTimeout(() => {
                            toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                        }, 2000);
                        
                        setTimeout(() => {
                            toast.style.display = "none";
                            toast.remove(); // Remove toast from DOM
                            window.location.reload()
                        }, 2800);
                    }else{
                        toast.textContent = result.message;
                        toast.style.backgroundColor = "#dc3545"; // Red color for error
                        toastContainer.appendChild(toast);
                        setTimeout(() => {
                            toast.style.display = "block";
                        }, 100);
            
                        setTimeout(() => {
                            toast.style.animation = "slideOutToRight 0.8s ease-out forwards";
                        }, 2000);
            
                        setTimeout(() => {
                            toast.style.display = "none";
                            toast.remove(); // Remove toast from DOM
                        }, 2800);
                    }
                } catch(error){
                    console.log(error);
                }
            });
        });
    </script>
    <script>
        async function deleteProduct(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor:  "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then(async (result) => {
            if (result.isConfirmed) {
                const respose = await fetch(`/deleteproduct?productId=${id}`, { method: 'DELETE' })
                const result = await respose.json()
                console.log(result);
                if (result.success) {
                    Swal.fire({
                        title: "Deleted!",
                        text: "Your Product has been deleted.",
                        icon: "success"
                    }).then(() => window.location.reload())
                }
            }
        });

    }
    </script>
    <script>
        // Function to update the query and reload the page
        document.getElementById("searchInput").addEventListener("input", function () {
            let value = this.value.trim();
            let url = new URL(window.location.href);
        
            if (value) {
                url.searchParams.set("search", value);
            } else {
                url.searchParams.delete("search"); // Remove if empty
            }
        
            window.location.href = url; // Reload the page with the updated query
        });
        
        // Function to pre-fill input and auto-focus after page reload
        window.addEventListener("DOMContentLoaded", function () {
            let searchInput = document.getElementById("searchInput");
            let urlParams = new URLSearchParams(window.location.search);
            let searchValue = urlParams.get("search");
        
            if (searchValue) {
                searchInput.value = searchValue;
            }
        
            searchInput.focus(); // Auto-focus on input after reload
        });
    </script>
    </body>
</html>